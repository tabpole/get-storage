import{_ as e,c as t,o as a,a as r}from"./app.8020e336.js";const n="/get-storage/benchmark/read.png",i="/get-storage/benchmark/write.png",s="/get-storage/benchmark/delete.png",u=JSON.parse('{"title":"Benchmark","description":"","frontmatter":{"prev":{"text":"About","link":"getting_started/about.md"},"next":{"text":"Install","link":"getting_started/install.md"}},"headers":[{"level":2,"title":"Read","slug":"read","link":"#read","children":[]},{"level":2,"title":"Write","slug":"write","link":"#write","children":[]},{"level":2,"title":"Delete","slug":"delete","link":"#delete","children":[]}],"relativePath":"getting_started/benchmark.md","lastUpdated":1679465219000}'),d={name:"getting_started/benchmark.md"},c=r('<h1 id="benchmark" tabindex="-1">Benchmark <a class="header-anchor" href="#benchmark" aria-hidden="true">#</a></h1><p>GetStorage is not just fast, it is absurdly fast for being memory-based. All of his operations are instantaneous. A backup of each operation is placed in a Container on the disk. Each container has its own file.</p><h2 id="read" tabindex="-1">Read <a class="header-anchor" href="#read" aria-hidden="true">#</a></h2><p><img src="'+n+'" alt="Read Benchmark"></p><h2 id="write" tabindex="-1">Write <a class="header-anchor" href="#write" aria-hidden="true">#</a></h2><p><img src="'+i+'" alt="Write Benchmark"></p><h2 id="delete" tabindex="-1">Delete <a class="header-anchor" href="#delete" aria-hidden="true">#</a></h2><p><img src="'+s+'" alt="Delete Benchmark"></p>',8),l=[c];function o(h,_,m,p,g,k){return a(),t("div",null,l)}const f=e(d,[["render",o]]);export{u as __pageData,f as default};
